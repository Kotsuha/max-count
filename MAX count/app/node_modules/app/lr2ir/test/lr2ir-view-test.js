"use strict";

const MyList = new function MyList() {
	this.getTable = function($) {
		return $("table").first();
	};
}();

const SongRanking = new function SongRanking() {
	this.getRankingTable = function($) {
		return $("table").eq(3);
	};
}();

const lr2ir = require("../lr2ir");
const { MyPage } = require("../util");
const foon = require("app/logger");
const delayCountDown = require("./delay-count-down");
const Promise = require("bluebird");


const playerid = "";
const bmsid = "";

// TODO
Promise.resolve()
	.then(function() {
		foon.log("測試 MyPage:", playerid);
	})
	.then(() => delayCountDown(5))
	.then(() => lr2ir.openMyPage(playerid))
	.then(function($) {
		const rivalIds = MyPage.getRivalIds($);
		if (rivalIds.length >10)
			rivalIds.length = 10;
		foon.log("Rival 前十個:\n", rivalIds);
	})
	.then(() => delayCountDown(15))

	.then(function() {
		foon.log("測試 MyList:\n", playerid);
	})
	.then(() => delayCountDown(5))
	.then(() => lr2ir.openMyList(playerid))
	.then(function($) {
		const $table = MyList.getTable($);
		const $tr = $("tr", $table);
		if ($tr.length > 10)
			$tr.length = 10;
		foon.log("表格前十行:\n", $tr.text());
	})
	.then(() => delayCountDown(15))

	.then(function() {
		foon.log("測試 SongRanking:", bmsid);
	})
	.then(() => delayCountDown(5))
	.then(() => lr2ir.openSongRanking(bmsid))
	.then(function($) {
		const $table = SongRanking.getRankingTable($);
		const $tr = $("tr", $table);
		if ($tr.length > 10)
			$tr.length = 10;
		foon.log("表格前十行:\n", $tr.text());
	})
	.then(() => delayCountDown(15))

	.catch(function(err) {
		foon.log(err);
	})
	.finally(function() {
		foon.log("測試結束");
	});
