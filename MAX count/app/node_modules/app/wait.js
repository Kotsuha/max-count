"use strict";

const wait = function(ms, param) {
	return new Promise(function(res) { // , rej
		// function fn(foo, bar, baz) {
		// 	console.log(foo, bar, baz);
		// }
		// setTimeout.apply(global, [fn, 3000, "foo!", "bar!", "baz!"]);
		// // But resolve() only has one parameter
		setTimeout(res, ms, param);
	});
};

const drawDot = function(count) {
	for (let i = 0; i < count; i++)
		process.stdout.write(".");
};

const dottedWait = function(sec) {
	sec = parseInt(sec);
	return new Promise(async function(resolve) {
		for (; sec > 0; sec--) {
			process.stdout.write("\x1b[K");
			drawDot(sec-1);
			process.stdout.write("\r");
			await wait(1000);
		}
		resolve();
	});
};

module.exports = {
	wait,
	dottedWait
};
